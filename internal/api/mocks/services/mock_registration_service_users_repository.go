// Code generated by MockGen. DO NOT EDIT.
// Source: gophermart/internal/api/services (interfaces: RegistrationServiceUsersRepository)

// Package services is a generated GoMock package.
package services

import (
	context "context"
	models "github.com/vysogota0399/gophermart_portal/internal/api/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRegistrationServiceUsersRepository is a mock of RegistrationServiceUsersRepository interface.
type MockRegistrationServiceUsersRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRegistrationServiceUsersRepositoryMockRecorder
}

// MockRegistrationServiceUsersRepositoryMockRecorder is the mock recorder for MockRegistrationServiceUsersRepository.
type MockRegistrationServiceUsersRepositoryMockRecorder struct {
	mock *MockRegistrationServiceUsersRepository
}

// NewMockRegistrationServiceUsersRepository creates a new mock instance.
func NewMockRegistrationServiceUsersRepository(ctrl *gomock.Controller) *MockRegistrationServiceUsersRepository {
	mock := &MockRegistrationServiceUsersRepository{ctrl: ctrl}
	mock.recorder = &MockRegistrationServiceUsersRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegistrationServiceUsersRepository) EXPECT() *MockRegistrationServiceUsersRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockRegistrationServiceUsersRepository) Create(arg0 context.Context, arg1 *models.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockRegistrationServiceUsersRepositoryMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRegistrationServiceUsersRepository)(nil).Create), arg0, arg1)
}
