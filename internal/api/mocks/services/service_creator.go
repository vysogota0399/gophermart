// Code generated by MockGen. DO NOT EDIT.
// Source: gophermart/internal/api/services (interfaces: SessionCreator)

// Package services is a generated GoMock package.
package services

import (
	context "context"
	models "github.com/vysogota0399/gophermart_portal/internal/api/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSessionCreator is a mock of SessionCreator interface.
type MockSessionCreator struct {
	ctrl     *gomock.Controller
	recorder *MockSessionCreatorMockRecorder
}

// MockSessionCreatorMockRecorder is the mock recorder for MockSessionCreator.
type MockSessionCreatorMockRecorder struct {
	mock *MockSessionCreator
}

// NewMockSessionCreator creates a new mock instance.
func NewMockSessionCreator(ctrl *gomock.Controller) *MockSessionCreator {
	mock := &MockSessionCreator{ctrl: ctrl}
	mock.recorder = &MockSessionCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionCreator) EXPECT() *MockSessionCreatorMockRecorder {
	return m.recorder
}

// Login mocks base method.
func (m *MockSessionCreator) Login(arg0 context.Context, arg1 *models.User) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Login indicates an expected call of Login.
func (mr *MockSessionCreatorMockRecorder) Login(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockSessionCreator)(nil).Login), arg0, arg1)
}
